---
import { formatDistance } from 'date-fns';

const { post } = Astro.props;

// Calculate the time ago from post date
const timeAgo = post.date
  ? formatDistance(new Date(post.date), new Date(), { addSuffix: true })
  : '';

// Get color class for category based on Notion color
const getCategoryColorClass = (color) => {
  const colorMap = {
    blue: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',
    green: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
    red: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',
    yellow: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',
    orange: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',
    purple: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',
    pink: 'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-300',
    gray: 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-300',
    default: 'bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-300',
  };
  
  return colorMap[color] || colorMap.default;
};

// Default cover image if none exists
const defaultCoverImage = '/images/default-cover.jpg';
---

<article class="bg-white dark:bg-secondary-800 rounded-lg shadow-lg overflow-hidden border border-secondary-200 dark:border-secondary-700">
  <div class="md:flex">
    <div class="md:w-1/2 relative">
      <a href={`/blog/${post.slug}`} class="block relative overflow-hidden h-full">
        <img
          src={post.coverImage || defaultCoverImage}
          alt={post.title}
          class="w-full h-full object-cover aspect-video md:aspect-auto"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent"></div>
        <div class="absolute bottom-4 left-4 right-4 text-white z-10 md:hidden">
          <h2 class="text-2xl font-bold mb-2">
            {post.title}
          </h2>
          {post.category && (
            <span
              class={`text-xs font-medium px-2.5 py-0.5 rounded ${getCategoryColorClass(post.category.color)}`}
            >
              {post.category.name}
            </span>
          )}
        </div>
      </a>
      <span class="absolute top-4 left-4 bg-accent-500 text-white text-sm font-medium px-3 py-1 rounded-md">
        Featured
      </span>
    </div>
    
    <div class="md:w-1/2 p-6 flex flex-col justify-center">
      <div class="flex justify-between items-center mb-3">
        {post.category && (
          <a
            href={`/categories/${post.category.name.toLowerCase()}`}
            class={`text-xs font-medium px-2.5 py-0.5 rounded ${getCategoryColorClass(post.category.color)} hidden md:inline-block`}
          >
            {post.category.name}
          </a>
        )}
        
        {timeAgo && (
          <time class="text-xs text-secondary-500 dark:text-secondary-400">
            {timeAgo}
          </time>
        )}
      </div>
      
      <h2 class="text-2xl font-bold text-secondary-900 dark:text-white mb-3 hidden md:block">
        <a href={`/blog/${post.slug}`} class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
          {post.title}
        </a>
      </h2>
      
      <p class="text-secondary-600 dark:text-secondary-300 mb-5">
        {post.description}
      </p>
      
      <a 
        href={`/blog/${post.slug}`}
        class="text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 font-medium inline-flex items-center transition-colors mt-auto"
      >
        Read full article
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 ml-1"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z"
            clip-rule="evenodd"
          />
        </svg>
      </a>
    </div>
  </div>
</article>